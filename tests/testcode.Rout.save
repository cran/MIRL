
R version 3.4.2 (2017-09-28) -- "Short Summer"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(MIRL)
Loading required package: glmnet
Loading required package: Matrix
Loading required package: foreach
Loaded glmnet 2.0-16

Loading required package: mice
Loading required package: lattice
Loading required package: MASS
Loading required package: boot

Attaching package: 'boot'

The following object is masked from 'package:lattice':

    melanoma

Warning messages:
1: package 'glmnet' was built under R version 3.4.4 
2: package 'foreach' was built under R version 3.4.4 
3: package 'mice' was built under R version 3.4.4 
> cor=0.6
> prob=0.02
> p=10
> n=200 #sample size
> Sigma=matrix(cor,p,p)#correlation of predictors
> diag(Sigma)=1
> mu=numeric(p)
> set.seed(3)
> #C is the complete design matrix without missing
> C=mvrnorm(n,mu,Sigma)
> #The missing indicator matrix
> A<-matrix(rbinom(n*p,size=1,prob),n,p)
> A[,c(1,4,6)]=0 #columns without missing
> p1=inv.logit(C[,1]+C[,6]-2)
> A[,5]=rbinom(n,size=1,p1) #Missing at Random
> p2=inv.logit(-C[,1]-0.5*C[,6]-2)
> A[,10]=rbinom(n,size=1,p2)
> p3=inv.logit(C[,4]-2)
> A[,9]=rbinom(n,size=1,p3)
> beta=numeric(p)
> beta[1:6]=c(0.1,0.2,0.5,-0.3,-.4,-0.5)*5
> ct=c(0,beta)
> #generating Y
> Y=C%*%beta+rnorm(n)
> B=C
> B[A==1]=NA
> fit<-mirl(B,Y,p/2,im=5)
> cbind(fit$coef,fit$Probability)
              [,1]  [,2]
 [1,]  0.061783341 1.000
 [2,]  0.178503044 0.312
 [3,]  0.605783210 0.668
 [4,]  2.297123985 0.948
 [5,] -1.131059619 0.856
 [6,] -1.484867290 0.820
 [7,] -2.538155801 0.936
 [8,] -0.039297759 0.100
 [9,] -0.024095122 0.164
[10,] -0.003449939 0.144
[11,] -0.015220884 0.052
> best<-threshold(B,Y,q2=p/2,m=3,thr=c(0.75,0.85))
> fit<-mirl(B,Y,3,p/2,im=5)
> #the column number for selected variables
> select=which(fit$Probability>best)
> 
> 
> proc.time()
   user  system elapsed 
 158.20    0.51  161.17 
